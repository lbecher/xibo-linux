name: xibo-player
base: core24
version: 1.8-R7
summary: Xibo Linux Player
description: Xibo for Linux Digital Signage Player
grade: stable
confinement: strict

platforms:
  amd64:
  arm64:
  armhf:
  ppc64el:
  riscv64:
  s390x:

slots:
  dbus-daemon: # name this whatever you want
    interface: dbus
    bus: session
    name: br.unioeste.xibo # adjust accordingly

apps:
  xibo-player:
    command: usr/bin/snap_run.sh xibo-watchdog
    plugs: [gsettings, desktop, network, network-status, home, audio-playback, screen-inhibit-control, framebuffer, opengl]
    slots: [dbus-daemon]
    extensions: [gnome]

  disabled-watchdog:
    command: usr/bin/snap_run.sh xibo-watchdog --disable-restart
    plugs: [gsettings, desktop, network, network-status, home, audio-playback, screen-inhibit-control, framebuffer, opengl]
    slots: [dbus-daemon]
    extensions: [gnome]

  options:
    command: usr/bin/xibo-options
    plugs: [gsettings, desktop, network, network-status, home]
    slots: [dbus-daemon]
    extensions: [gnome]

parts:
  base:
    plugin: nil
    build-packages:
      - libxss-dev
      - libssl-dev
      - cmake
      - g++

  date-tz:
    source: https://github.com/HowardHinnant/date/archive/v3.0.0.tar.gz
    plugin: cmake
    build-packages:
      - libcurl4-gnutls-dev
    cmake-parameters:
      - -DBUILD_TZ_LIB=ON
      - -DBUILD_SHARED_LIBS=ON
      - -DUSE_SYSTEM_TZ_DB=ON
      - -DCMAKE_INSTALL_PREFIX=/usr
    after: [base]

  player:
    source: player
    plugin: cmake
    override-build: |
      # Get architecture
      ARCH=$(gcc -dumpmachine)
      echo "Building for architecture: $ARCH"

      # Debug: Show current library paths
      echo "Current LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
      echo "Current PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
      
      # Debug: Show what Pango libraries are available in different locations
      echo "Pango libraries in stage:"
      find $SNAPCRAFT_STAGE -name "*pango*" -type f 2>/dev/null || echo "No Pango libraries found in stage"
      
      echo "Pango libraries in system:"
      find /usr/lib -name "*pango*" -type f 2>/dev/null | head -10 || echo "No Pango libraries found in system"
      
      echo "Pango libraries in SDK:"
      find /snap/gnome-46-2404-sdk -name "*pango*" -type f 2>/dev/null | head -10 || echo "No Pango libraries found in SDK"

      # Set library paths to prefer stage libraries over SDK libraries
      export PKG_CONFIG_PATH="$SNAPCRAFT_STAGE/usr/lib/$ARCH/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$PKG_CONFIG_PATH"
      export LD_LIBRARY_PATH="$SNAPCRAFT_STAGE/usr/lib/$ARCH:$SNAPCRAFT_STAGE/usr/lib:$LD_LIBRARY_PATH"
      
      # More aggressive linker flags to force library paths
      export LDFLAGS="-Wl,--as-needed -L$SNAPCRAFT_STAGE/usr/lib/$ARCH -L$SNAPCRAFT_STAGE/usr/lib -Wl,-rpath-link,$SNAPCRAFT_STAGE/usr/lib/$ARCH -Wl,-rpath,$SNAPCRAFT_STAGE/usr/lib/$ARCH"
      export CMAKE_EXE_LINKER_FLAGS="-L$SNAPCRAFT_STAGE/usr/lib/$ARCH -L$SNAPCRAFT_STAGE/usr/lib -Wl,--disable-new-dtags -Wl,-rpath,$SNAPCRAFT_STAGE/usr/lib/$ARCH"

      echo "Updated LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
      echo "Updated PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
      echo "LDFLAGS: $LDFLAGS"

      # Call cmake with explicit library directories
      echo "Running cmake with explicit paths..."
      cmake "$SNAPCRAFT_PART_SRC" \
        -G "Unix Makefiles" \
        -DCMAKE_BUILD_TYPE=Release \
        -DAPP_ENV=SNAP \
        -DCMAKE_PREFIX_PATH="$SNAPCRAFT_STAGE/usr" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_SKIP_BUILD_RPATH=OFF \
        -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
        -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON \
        -DCMAKE_FIND_ROOT_PATH="$SNAPCRAFT_STAGE/usr" \
        -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=BOTH \
        -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=BOTH \
        -DCMAKE_LIBRARY_PATH="$SNAPCRAFT_STAGE/usr/lib/$ARCH:$SNAPCRAFT_STAGE/usr/lib" \
        -DCMAKE_EXE_LINKER_FLAGS="-L$SNAPCRAFT_STAGE/usr/lib/$ARCH -L$SNAPCRAFT_STAGE/usr/lib $CMAKE_EXE_LINKER_FLAGS"
      
      echo "Running make..."
      cmake --build . -- -j4
      
      echo "Installing..."
      DESTDIR="$SNAPCRAFT_PART_INSTALL" cmake --install .
    stage-packages:
      - libcrypto++8t64
      - libboost-date-time1.83.0
      - libboost-filesystem1.83.0
      - libboost-program-options1.83.0
      - libboost-thread1.83.0
      - libboost-system1.83.0
      - libglu1-mesa
      - libzmq5
      - libgtkmm-3.0-1v5
      - libcanberra-gtk3-module
      - libwebkit2gtk-4.1-0
      - libgpm2 # gstreamer warning
      - libslang2 # gstreamer warning
      - gstreamer1.0-plugins-good
      - gstreamer1.0-plugins-base
      - gstreamer1.0-gl
      - gstreamer1.0-libav
      - gstreamer1.0-gtk3
      - libdate-tz3
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpangoft2-1.0-0
      - libharfbuzz0b
    stage:
      # Include specific Pango libraries to override SDK versions
      - usr/lib/*/libpango*
      - usr/lib/*/libharfbuzz*
      - "*"
    build-packages:
      - libcrypto++-dev
      - libboost1.83-all-dev
      - libgtkmm-3.0-dev
      - libwebkit2gtk-4.1-dev
      - libglibmm-2.4-dev
      - libzmq3-dev
      - libspdlog-dev
      - libgtest-dev
      - libgmock-dev
      - libgstreamer-plugins-good1.0-dev
      - libgstreamer-plugins-base1.0-dev
      - libgstreamer1.0-dev
      - libsqlitecpp-dev
      - libhowardhinnant-date-dev
      - libpango1.0-dev
    after: [date-tz]
